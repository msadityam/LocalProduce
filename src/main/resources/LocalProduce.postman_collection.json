{
	"info": {
		"_postman_id": "7f786b09-56e9-4ab1-a9e0-730cd4d842b0",
		"name": "LocalProduce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25176270"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // Parse the response body as JSON\r",
									"// const response = pm.response.json();\r",
									"\r",
									"// // Extract the CSRF token from the response body\r",
									"// const csrfToken = response.csrfToken;\r",
									"\r",
									"// // Store the CSRF token in a Postman environment variable\r",
									"// pm.environment.set(\"csrfToken\", csrfToken);\r",
									"\r",
									"// // Log the CSRF token for verification\r",
									"// console.log(\"CSRF Token:\", csrfToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "user",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"user@user.com\",\r\n    \"name\": \"user2\",\r\n    \"phoneNumber\": \"123456789\",\r\n    \"password\": \"password123\",\r\n    \"role\": \"USER\"\r\n    \r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "verifyEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // Parse the response body as JSON\r",
									"// const response = pm.response.json();\r",
									"\r",
									"// // Extract the CSRF token from the response body\r",
									"// const csrfToken = response.csrfToken;\r",
									"\r",
									"// // Store the CSRF token in a Postman environment variable\r",
									"// pm.environment.set(\"csrfToken\", csrfToken);\r",
									"\r",
									"// // Log the CSRF token for verification\r",
									"// console.log(\"CSRF Token:\", csrfToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "user",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/confirm?email=user@user.com&otp=288442",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"confirm"
							],
							"query": [
								{
									"key": "email",
									"value": "user@user.com"
								},
								{
									"key": "otp",
									"value": "288442"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save Token\", function () {\r",
									"    // Parse the response body as JSON\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    // Extract the token from the response body\r",
									"    var token = responseBody.accessToken; // Assuming 'access_token' is the key for the token in the response\r",
									"\r",
									"    // Set the token in the environment variable with the 'Bearer ' prefix\r",
									"    pm.environment.set(\"token\", \"Bearer \" + token.trim());\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"aditya2@admin.com\",\r\n    \"password\": \"password123\" \r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/login/generateToken",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"login",
								"generateToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // Parse the response body as JSON\r",
									"// const response = pm.response.json();\r",
									"\r",
									"// // Extract the CSRF token from the response body\r",
									"// const csrfToken = response.csrfToken;\r",
									"\r",
									"// // Store the CSRF token in a Postman environment variable\r",
									"// pm.environment.set(\"csrfToken\", csrfToken);\r",
									"\r",
									"// // Log the CSRF token for verification\r",
									"// console.log(\"CSRF Token:\", csrfToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/admin/getAll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"getAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // Parse the response body as JSON\r",
									"// const response = pm.response.json();\r",
									"\r",
									"// // Extract the CSRF token from the response body\r",
									"// const csrfToken = response.csrfToken;\r",
									"\r",
									"// // Store the CSRF token in a Postman environment variable\r",
									"// pm.environment.set(\"csrfToken\", csrfToken);\r",
									"\r",
									"// // Log the CSRF token for verification\r",
									"// console.log(\"CSRF Token:\", csrfToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/user/353",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"user",
								"353"
							],
							"query": [
								{
									"key": "email",
									"value": "ac@gmail.com",
									"disabled": true
								},
								{
									"key": "otp",
									"value": "744809",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // Parse the response body as JSON\r",
									"// const response = pm.response.json();\r",
									"\r",
									"// // Extract the CSRF token from the response body\r",
									"// const csrfToken = response.csrfToken;\r",
									"\r",
									"// // Store the CSRF token in a Postman environment variable\r",
									"// pm.environment.set(\"csrfToken\", csrfToken);\r",
									"\r",
									"// // Log the CSRF token for verification\r",
									"// console.log(\"CSRF Token:\", csrfToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \r\n    \"name\": \"user3\",\r\n    \"phoneNumber\": \"12345678\",\r\n    \"role\": \"USER\",\r\n    \r\n\r\n    \"coins\": 500.0,\r\n    \"walletItems\": {}\r\n    \r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/user/302",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"user",
								"302"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // Parse the response body as JSON\r",
									"// const response = pm.response.json();\r",
									"\r",
									"// // Extract the CSRF token from the response body\r",
									"// const csrfToken = response.csrfToken;\r",
									"\r",
									"// // Store the CSRF token in a Postman environment variable\r",
									"// pm.environment.set(\"csrfToken\", csrfToken);\r",
									"\r",
									"// // Log the CSRF token for verification\r",
									"// console.log(\"CSRF Token:\", csrfToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/admin/deleteById?id=252",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"deleteById"
							],
							"query": [
								{
									"key": "id",
									"value": "252"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // Parse the response body as JSON\r",
									"// const response = pm.response.json();\r",
									"\r",
									"// // Extract the CSRF token from the response body\r",
									"// const csrfToken = response.csrfToken;\r",
									"\r",
									"// // Store the CSRF token in a Postman environment variable\r",
									"// pm.environment.set(\"csrfToken\", csrfToken);\r",
									"\r",
									"// // Log the CSRF token for verification\r",
									"// console.log(\"CSRF Token:\", csrfToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/admin/deleteAll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"admin",
								"deleteAll"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inventory",
			"item": [
				{
					"name": "getAllItems",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/items/user/getAll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"user",
								"getAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "purchaseItem",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/items/user/purchase?userId=353&itemName=Orange&quantity=3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"user",
								"purchase"
							],
							"query": [
								{
									"key": "userId",
									"value": "353"
								},
								{
									"key": "itemName",
									"value": "Orange"
								},
								{
									"key": "quantity",
									"value": "3"
								},
								{
									"key": "itemName",
									"value": "Tomato",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sellItem",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "http://localhost:8080/items/user/sell?userId=353&itemName=Orange&quantity=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"user",
								"sell"
							],
							"query": [
								{
									"key": "userId",
									"value": "353"
								},
								{
									"key": "itemName",
									"value": "Orange"
								},
								{
									"key": "quantity",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addItmesToUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 102,\r\n    \"itemName\": \"Orange\",\r\n    \"quantity\": 10\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/items/admin/addToUserWallet",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"admin",
								"addToUserWallet"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddItemToInventory",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"fruit\",\r\n    \"price\": 20.0,\r\n    \"quantity\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/items/admin/addToInventory",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"admin",
								"addToInventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "getItemByName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // Parse the response body as JSON\r",
									"// const response = pm.response.json();\r",
									"\r",
									"// // Extract the CSRF token from the response body\r",
									"// const csrfToken = response.csrfToken;\r",
									"\r",
									"// // Store the CSRF token in a Postman environment variable\r",
									"// pm.environment.set(\"csrfToken\", csrfToken);\r",
									"\r",
									"// // Log the CSRF token for verification\r",
									"// console.log(\"CSRF Token:\", csrfToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/items/user/Mango",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"user",
								"Mango"
							],
							"query": [
								{
									"key": "email",
									"value": "ac@gmail.com",
									"disabled": true
								},
								{
									"key": "otp",
									"value": "744809",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateItem",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \"name\": \"Mango\",\r\n    \"price\": 80.0,\r\n    \"quantity\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/items/admin/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"admin",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteItemByName",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/items/admin/name/fruit",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"admin",
								"name",
								"fruit"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteItemById",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/items/admin/id/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"items",
								"admin",
								"id",
								"5"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}